group = 'com.dmdirc'

apply plugin: 'com.dmdirc.git-version'
apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'


sourceSets {
    main {
        java.srcDirs = ['src']
        resources.srcDirs = ['res']
    }
    test {
        java.srcDirs = ['test']
        resources.srcDirs = ['test-res']
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories.mavenCentral()

dependencies {
    compile group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.0'

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.10.17'
    testCompile group: 'com.google.jimfs', name: 'jimfs', version: '1.0'
}

// DMDirc uses 18.0, JimFS has a transient dep on 16.0.1 - force the newer version
configurations.all {
    resolutionStrategy.force('com.google.guava:guava:18.0')
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourcesJar { classifier 'sources' }
            artifact javadocJar { classifier 'javadoc' }
        }
    }
    repositories {
        maven {
            name 'snapshots'
            url 'http://artifactory.dmdirc.com/artifactory/repo'
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.2.1'
}

task publishSnapshot(dependsOn: 'publishMavenJavaPublicationToSnapshotsRepository') << {
}

buildscript {
    repositories {
        mavenCentral()
        maven { url 'http://artifactory.dmdirc.com/artifactory/repo' }
        maven { url 'https://dl.bintray.com/dmdirc/releases/' }
    }

    dependencies {
        classpath group: 'com.dmdirc', name: 'git-version', version: '1.0'
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.1.0'
    }
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

